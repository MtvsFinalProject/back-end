plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    implementation 'org.springframework.boot:spring-boot-starter-validation'


    // QueryDSL 관련 의존성
    implementation "com.querydsl:querydsl-jpa:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    // MapStruct 의존성 추가
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Jakarta Persistence API 추가 (문제 해결용)
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    // JSON Simple
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Springdoc OpenAPI 3
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // Spring Batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'

    // MySQL Connector
    implementation 'mysql:mysql-connector-java:8.0.28'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Test Dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

sourceSets {
    main {
        java {
            srcDirs += "src/main/generated"
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

// QueryDSL 컴파일러 옵션 설정
def querydslSrcDir = 'src/main/generated'

clean {
    delete file(querydslSrcDir)
}

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}
